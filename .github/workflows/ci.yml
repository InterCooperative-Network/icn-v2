name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy
      
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      
      - name: Install cargo-udeps
        run: cargo install cargo-udeps --locked

      - name: Check for unused dependencies
        run: cargo udeps --workspace --all-targets --backend=cargo-metadata # Using cargo-metadata backend as it's often more accurate

      - name: Check workspace
        run: cargo check --workspace
      
      - name: Run tests
        run: cargo test --workspace
      
      - name: Check format
        run: cargo fmt -- --check
      
      - name: Run clippy
        run: cargo clippy --workspace -- -D warnings

  coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      
      - name: Run tarpaulin
        # Output an XML report (cobertura.xml by default in workspace root or target/tarpaulin/)
        # Fail if coverage is below 70% (adjust as needed)
        run: cargo tarpaulin --workspace --out Xml --exclude-files "target/*" --verbose --fail-under 70
      
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false # Keep this false if --fail-under is the primary gate
          # Codecov action will automatically find cobertura.xml or other common report names

      - name: Upload Tarpaulin XML Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: tarpaulin-cobertura-report
          path: cobertura.xml # Default name, adjust if tarpaulin outputs differently or to a different dir
          if-no-files-found: error # Fail the step if the report is not found

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Install cargo-audit
        run: cargo install cargo-audit
      
      - name: Run security audit
        run: cargo audit
      
      - name: Install cargo-deny
        run: cargo install cargo-deny
      
      - name: Check licenses and vulnerabilities
        run: cargo deny check

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Build documentation
        run: cargo doc --workspace --all-features --no-deps
        env:
          RUSTDOCFLAGS: "-D warnings"
  
  benchmarks:
    # Only run benchmarks on pull requests to prevent load on CI
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Run benchmarks
        run: cargo bench

  feature-matrix:
    name: Feature Compatibility Matrix (icn-types)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Install cargo-hack
        run: cargo install cargo-hack

      - name: Check all feature combinations for icn-types
        run: |
          cargo hack check \
            -p icn-types \
            --feature-powerset \
            --skip-no-default-features \
            --optional-deps=allow \
            --deny-warnings

  cli-docs:
    name: CLI Docs Are Up To Date
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run CLI doc generator
        # Ensure all necessary features are enabled for icn-cli if doc generation depends on them
        run: cargo run --package icn-cli --bin gen_clap_docs

      - name: Fail if docs out of date
        run: git diff --exit-code docs/generated/icn.md
      